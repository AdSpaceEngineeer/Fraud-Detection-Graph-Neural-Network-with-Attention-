from torch_geometric.nn import GATConv

class FraudGAT(torch.nn.Module):
    def __init__(self, in_features, hidden_dim, heads=4):
        super().__init__()
        self.conv1 = GATConv(in_features, hidden_dim, heads=heads, dropout=0.6)
        # output of conv1 has shape [num_nodes, hidden_dim*heads]
        self.conv2 = GATConv(hidden_dim*heads, 2, heads=1, concat=False, dropout=0.6)
    def forward(self, x, edge_index):
        x = self.conv1(x, edge_index)
        x = F.elu(x)
        x = F.dropout(x, p=0.6, training=self.training)
        x = self.conv2(x, edge_index)
        return x  # raw logits

# Initialize GAT
model_gat = FraudGAT(in_features=32, hidden_dim=64, heads=4)
